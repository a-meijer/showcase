ALPHA001: Iterative Backtracking in C++ - Open
    2021-01-26  :   Consider the possibility of iterative backtracking while you work on the recursive backtracking implementations.

INDEV009: Recursive Backtracking in C - Open
    2021-01-10  :   I realized that with a recursive approach to nxnQueens, the struct/class I am using doesn't need a pointer to a parent node.
                    This information can possibly be used in the construction of an iterative solution to nxnQueens in the future,
                    which ties back to the original aim of this project, to compare iteraative and recursive solutions for backtracking. Meh.
    2021-01-10  :   nxnQueens.c
    2021-01-11  :   I realize my solution is not the best. . . The horizontal and doagonal functions don't require a BTNode, so I could be creating
                    a board, checking it with both horizontal and diagonal functions, and then creating the BTNode afterward.
                    Definitely I can chalk it up to cowboy coding, but it's a small program, so it's okay to have such inaccuracies.
    2021-01-26  :   Uploading incomplete code to showcase, so I can solve the remainder with pen and paper rather than by playing guess-and-check with the compiler.
                    

INDEV008: Make a Linked List - Closed
    2021-01-04  :   To establish working syntax for structs, I will first encode a linkedlist solution before moving on to backtracking.
    2021-01-04  :   The C linked list is now complete, but it was producing a warning: incompatible implicit declaration of built-in function 'malloc'
                    This is because I neglected to include <stdlib.h>
    2021-01-05  :   Making a linked list in C++ should be much easier. Those pointers are confusing!
    2021-01-06  :   Closed Complete

INDEV007: Test Results File - Open
    2020-12-13  :   Removed unnecessary Cpp header files. Headerfiles are for when a class is being used for multiple source files; I don't need that.
    2020-12-13  :   Updated Readme with notes about compilation
    2020-12-13  :   Decided to include testing results as part of project.
    2020-12-13  :   Work in progress... 
    2021-01-04  :   

INDEV006: Add Instructions - Closed
    2020-11-15  :   Entry Created
    2020-11-15  :   Now that there are header files, remember to create compilation instructions in the Readme!
    2020-12-13  :   CLosed Complete

INDEV005: Rewrite Readme - Closed
    2020-11-15  :   Entry Created
    2020-11-15  :   Rewrite the README according to the new scope of the project, to write 2 nxnQueens solutions.
    2020-11-14  :   Closed Complete

INDEV004: Pivot Project - Closed
    2020-11-15  :   Entry Created
    2020-11-15  :   Maintain the new vision for the project is to create two files that solve nxnQueens, one with structs and one with classes. Glhf; let's make this quick.
    2020-11-15  :   I have experienced a VS Code warning while writing structs in C, "incomplete type is not allowed."
                    I may need to create a header file for this!
    2021-01-04  :   Closed Complete

INDEV003: include Prototype1 in Readme - Closed
    2020-11-05  :   Entry Created
    2020-11-05  :   Write a paragraph summary of the first prototype, which will be recursive.
    Later prototypes will require one recursive algorithm and one iterative algorithm to compare space and time efficiency.
    This first prototype will only include the recursive example of backtracking.
    2020-11-15  :   CLosed Abandoned

INDEV002: Define Terms - Closed
    2020-11-05  :   Entry Created
    2020-11-05  :   The readme should include a section to explain each of the two terms, recursion and backtracking.
    Consider the type of problem that backtracking is made to solve and how that type of problem can be represented simply.
    If it turns out that Backtracking is codeword for something like NP-Hard, this project will become a study of various algorithms for that class of problems, and I will pivot the project description.
    2020-11-06  :   It turns out that Backtracking is used to solve CSP, so I have updated the readme accordingly.
    Now I will need to include definitions for Iteration, Backtracking, Recursion, and CSP.
    2020-11-15  :   Closed Abandoned

INDEV001: Update Project Description - Closed
    2020-11-05  :   Entry Created
    2020-11-05  :   The project description at the top of the readme should include mention of the possibility that no proof can be found.
    2020-11-06  :   Closed Complete

